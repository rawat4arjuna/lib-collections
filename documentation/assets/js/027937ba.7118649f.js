"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7324],{1184:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>l});var t=n(4041);const s={},i=t.createContext(s);function r(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:o},e.children)}},7702:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rexora-hooks/use-rexora-boolean","title":"useRexoraBoolean","description":"The useRexoraBoolean hook is a simple utility hook for managing a boolean state with dedicated functions to set it to true, false, or toggle its value.","source":"@site/docs/rexora-hooks/use-rexora-boolean.md","sourceDirName":"rexora-hooks","slug":"/rexora-hooks/use-rexora-boolean","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-boolean","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"useRexoraState","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-state"},"next":{"title":"useRexoraIdle","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-idle"}}');var s=n(1085),i=n(1184);const r={sidebar_position:7},l="useRexoraBoolean",a={},d=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Initializing with true",id:"initializing-with-true",level:3}];function c(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"userexoraboolean",children:"useRexoraBoolean"})}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.code,{children:"useRexoraBoolean"})," hook is a simple utility hook for managing a boolean state with dedicated functions to set it to true, false, or toggle its value."]}),"\n",(0,s.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"jsx\nimport { useRexoraBoolean } from '@rexora/hooks';\n\nfunction Component() {\n  const [isVisible, { on, off, toggle }] = useRexoraBoolean(false);\n\n  return (\n    <div>\n      <p>Is Visible: {isVisible ? 'True' : 'False'}</p>\n      <button onClick={on}>Set True</button>\n      <button onClick={off}>Set False</button>\n      <button onClick={toggle}>Toggle</button>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(o.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(o.table,{children:[(0,s.jsx)(o.thead,{children:(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.th,{children:"Parameter"}),(0,s.jsx)(o.th,{children:"Type"}),(0,s.jsx)(o.th,{children:"Description"}),(0,s.jsx)(o.th,{children:"Default"})]})}),(0,s.jsx)(o.tbody,{children:(0,s.jsxs)(o.tr,{children:[(0,s.jsx)(o.td,{children:(0,s.jsx)(o.code,{children:"initialValue"})}),(0,s.jsx)(o.td,{children:(0,s.jsx)(o.code,{children:"boolean"})}),(0,s.jsx)(o.td,{children:"The initial value of the boolean state."}),(0,s.jsx)(o.td,{children:(0,s.jsx)(o.code,{children:"false"})})]})})]}),"\n",(0,s.jsx)(o.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(o.p,{children:"The hook returns an array containing:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"boolean"}),": The current value of the boolean state."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"object"}),": An object with the following functions:","\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"on: () => void"}),": Sets the boolean state to ",(0,s.jsx)(o.code,{children:"true"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"off: () => void"}),": Sets the boolean state to ",(0,s.jsx)(o.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:[(0,s.jsx)(o.code,{children:"toggle: () => void"}),": Toggles the boolean state."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(o.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"jsx\nimport { useRexoraBoolean } from '@rexora/hooks';\n\nfunction MyComponent() {\n  const [isOpen, { on, off, toggle }] = useRexoraBoolean(); // Defaults to false\n\n  return (\n    <div>\n      <p>Modal Open: {isOpen ? 'Yes' : 'No'}</p>\n      <button onClick={toggle}>Toggle Modal</button>\n      <button onClick={on}>Open Modal</button>\n      <button onClick={off}>Close Modal</button>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(o.h3,{id:"initializing-with-true",children:"Initializing with true"})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);