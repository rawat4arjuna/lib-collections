"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7694],{1184:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var n=t(4041);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}},3133:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"rexora-hooks/use-rexora-document-visibility","title":"useRexoraDocumentVisibility","description":"The useRexoraDocumentVisibility hook is a utility that allows you to track the visibility state of the document. It provides a simple way to determine if the user is currently viewing the page or if it\'s hidden (e.g., in another tab or minimized).","source":"@site/docs/rexora-hooks/use-rexora-document-visibility.md","sourceDirName":"rexora-hooks","slug":"/rexora-hooks/use-rexora-document-visibility","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-document-visibility","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"use-rexora-document-visibility","title":"useRexoraDocumentVisibility"},"sidebar":"tutorialSidebar","previous":{"title":"useRexoraDebounce","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-debounce"},"next":{"title":"useRexoraFetch","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-fetch"}}');var s=t(1085),r=t(1184);const o={id:"use-rexora-document-visibility",title:"useRexoraDocumentVisibility"},a=void 0,c={},l=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Description",id:"description",level:2}];function d(e){const i={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"useRexoraDocumentVisibility"})," hook is a utility that allows you to track the visibility state of the document. It provides a simple way to determine if the user is currently viewing the page or if it's hidden (e.g., in another tab or minimized)."]}),"\n",(0,s.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"jsx\nimport { useRexoraDocumentVisibility } from 'rexora-hooks';\n\nfunction MyComponent() {\n  const visibilityState = useRexoraDocumentVisibility();\n\n  return (\n    <div>\n      <p>Document is currently: {visibilityState}</p>\n      {visibilityState === 'visible' ? (\n        <p>Welcome back!</p>\n      ) : (\n        <p>We'll be here when you return.</p>\n      )}\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.code,{children:"useRexoraDocumentVisibility"})," hook does not accept any parameters."]}),"\n",(0,s.jsx)(i.h2,{id:"return-value",children:"Return Value"}),"\n",(0,s.jsx)(i.p,{children:"The hook returns a single string value representing the current visibility state of the document. The possible values are:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"'visible'"}),": The page content is at least partially visible."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"'hidden'"}),": The page content is not visible to the user."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"'prerender'"}),": The page is being prerendered and is not yet visible."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"'unloaded'"}),": The page is being unloaded."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(i.p,{children:["This hook leverages the browser's ",(0,s.jsx)(i.code,{children:"document.visibilityState"})," API and the ",(0,s.jsx)(i.code,{children:"visibilitychange"})," event. It initializes the state with the current ",(0,s.jsx)(i.code,{children:"document.visibilityState"})," when the component mounts and updates the state whenever the ",(0,s.jsx)(i.code,{children:"visibilitychange"})," event fires. This provides a reactive way to keep track of whether the user is actively viewing your page."]}),"\n",(0,s.jsx)(i.p,{children:"This can be useful for various scenarios, such as:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Pausing or resuming animations or video playback when the tab is not active."}),"\n",(0,s.jsx)(i.li,{children:"Stopping or starting data fetching or background processes when the page is hidden or becomes visible."}),"\n",(0,s.jsx)(i.li,{children:"Tracking user engagement based on how long they spend with the tab in focus."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The hook ensures that event listeners are properly added and removed to prevent memory leaks."})]})}function u(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);