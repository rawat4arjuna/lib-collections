"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1939],{1184:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(4041);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}},3436:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"rexora-hooks/use-rexora-timeout","title":"useRexoraTimeout","description":"The useRexoraTimeout hook provides a convenient way to set and clear a timeout within a React component. It ensures that the timeout is properly cleared when the component unmounts or when the delay or callback function changes.","source":"@site/docs/rexora-hooks/use-rexora-timeout.md","sourceDirName":"rexora-hooks","slug":"/rexora-hooks/use-rexora-timeout","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-timeout","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"use-rexora-timeout","title":"useRexoraTimeout"},"sidebar":"tutorialSidebar","previous":{"title":"useRexoraThrottle","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-throttle"},"next":{"title":"useRexoraToggle","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-toggle"}}');var r=n(1085),s=n(1184);const a={id:"use-rexora-timeout",title:"useRexoraTimeout"},i=void 0,c={},l=[{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Notes",id:"notes",level:2}];function u(e){const t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"useRexoraTimeout"})," hook provides a convenient way to set and clear a timeout within a React component. It ensures that the timeout is properly cleared when the component unmounts or when the delay or callback function changes."]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"jsx\nimport { useRexoraTimeout } from '@rexora/hooks';\nimport { useState } from 'react';\n\nfunction MyComponent() {\n  const [message, setMessage] = useState('Waiting...');\n  const clearMessageTimeout = useRexoraTimeout(() => {\n    setMessage('Timeout complete!');\n  }, 3000); // Set message after 3 seconds\n\n  const handleClick = () => {\n    setMessage('Button clicked!');\n    // You can clear the existing timeout if needed\n    clearMessageTimeout();\n    // Optionally set a new timeout\n    // useRexoraTimeout(() => setMessage('New timeout done!'), 1000);\n  };\n\n  return (\n    <div>\n      <p>{message}</p>\n      <button onClick={handleClick}>Click me</button>\n      <button onClick={clearMessageTimeout}>Clear Timeout</button>\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"useRexoraTimeout"})," accepts the following parameters:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"callback"}),": A function to be executed after the specified delay."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"delay"}),": The number of milliseconds to wait before executing the callback. If ",(0,r.jsx)(t.code,{children:"null"})," or ",(0,r.jsx)(t.code,{children:"undefined"}),", the timeout is cleared."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,r.jsx)(t.p,{children:"The hook returns a function that can be called to clear the timeout manually before the delay has passed."}),"\n",(0,r.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"The timeout is automatically cleared when the component unmounts."}),"\n",(0,r.jsxs)(t.li,{children:["If the ",(0,r.jsx)(t.code,{children:"callback"})," or ",(0,r.jsx)(t.code,{children:"delay"})," parameters change, the existing timeout is cleared and a new one is set."]}),"\n",(0,r.jsxs)(t.li,{children:["Passing ",(0,r.jsx)(t.code,{children:"null"})," or ",(0,r.jsx)(t.code,{children:"undefined"})," for the ",(0,r.jsx)(t.code,{children:"delay"})," parameter will clear any existing timeout."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);