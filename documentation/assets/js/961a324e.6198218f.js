"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3038],{1184:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(4041);const s={},d=t.createContext(s);function i(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(d.Provider,{value:n},e.children)}},8096:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"rexora-charts/LineChart","title":"Line Chart","description":"A Line Chart is used to display data points connected by straight line segments. It\'s ideal for showing trends over time or across categories.","source":"@site/docs/rexora-charts/LineChart.md","sourceDirName":"rexora-charts","slug":"/rexora-charts/LineChart","permalink":"/rexora/documentation/docs/rexora-charts/LineChart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"100% Stacked Bar Chart","permalink":"/rexora/documentation/docs/rexora-charts/HundredPercentStackedBarChart"},"next":{"title":"Lollipop Chart","permalink":"/rexora/documentation/docs/rexora-charts/LollipopChart"}}');var s=r(1085),d=r(1184);const i={},c="Line Chart",o={},l=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Props and Options",id:"props-and-options",level:2},{value:"Component Props",id:"component-props",level:3},{value:"Options Properties",id:"options-properties",level:3},{value:"Advanced Example",id:"advanced-example",level:2},{value:"Best Practices",id:"best-practices",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"line-chart",children:"Line Chart"})}),"\n",(0,s.jsx)(n.p,{children:"A Line Chart is used to display data points connected by straight line segments. It's ideal for showing trends over time or across categories."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(n.p,{children:["The Line Chart component is part of the ",(0,s.jsx)(n.code,{children:"@rexora/charts"})," package. You can install it using npm or yarn:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @rexora/charts\n# or\nyarn add @rexora/charts\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:"Here's a basic example of how to use the Line Chart component:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { LineChart } from '@rexora/charts';\n\nconst myData = [\n  { label: 'Jan', value: 10 },\n  { label: 'Feb', value: 15 },\n  { label: 'Mar', value: 8 },\n  { label: 'Apr', value: 12 },\n  { label: 'May', value: 18 },\n];\n\nconst MyLineChart = () => {\n  return (\n    <div style={{ width: '100%', height: '300px' }}>\n      <LineChart \n        data={myData}\n        options={{\n          width: '100%',\n          height: '100%',\n          color: '#4f81bd',\n          strokeWidth: 2\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MyLineChart;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"props-and-options",children:"Props and Options"}),"\n",(0,s.jsx)(n.h3,{id:"component-props",children:"Component Props"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Prop Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"data"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Array"})}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Array of data objects containing x and y values"}),(0,s.jsx)(n.td,{children:"-"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"options"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Configuration object for chart appearance and behavior"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{}"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"options-properties",children:"Options Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Option Name"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"width"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"number"})," or ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsxs)(n.td,{children:["Chart width in pixels or percentage (e.g., ",(0,s.jsx)(n.code,{children:"500"})," or ",(0,s.jsx)(n.code,{children:"'100%'"}),")"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'auto'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"height"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"number"})," or ",(0,s.jsx)(n.code,{children:"string"})]}),(0,s.jsxs)(n.td,{children:["Chart height in pixels or percentage (e.g., ",(0,s.jsx)(n.code,{children:"400"})," or ",(0,s.jsx)(n.code,{children:"'100%'"}),")"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'auto'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"margin"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Object"})}),(0,s.jsxs)(n.td,{children:["Chart margins: ",(0,s.jsx)(n.code,{children:"{ top: number, right: number, bottom: number, left: number }"})]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{ top: 20, right: 20, bottom: 30, left: 40 }"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"xAccessor"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Key for x-axis values in data objects"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'label'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"yAccessor"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Key for y-axis values in data objects"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'value'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"color"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsx)(n.td,{children:"Line color (any valid CSS color)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'steelblue'"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"strokeWidth"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Line stroke width in pixels"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"1.5"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"showGrid"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether to show grid lines"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"showDots"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{children:"Whether to show data points as dots"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"true"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"dotRadius"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)(n.td,{children:"Radius of data point dots when shown"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"3"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"curveType"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"string"})}),(0,s.jsxs)(n.td,{children:["Line curve type (",(0,s.jsx)(n.code,{children:"'linear'"}),", ",(0,s.jsx)(n.code,{children:"'monotone'"}),", ",(0,s.jsx)(n.code,{children:"'step'"}),", etc.)"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"'linear'"})})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-example",children:"Advanced Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<LineChart\n  data={salesData}\n  options={{\n    width: 800,\n    height: 400,\n    xAccessor: 'month',\n    yAccessor: 'revenue',\n    color: '#e63946',\n    strokeWidth: 3,\n    showGrid: true,\n    showDots: true,\n    dotRadius: 4,\n    curveType: 'monotone',\n    margin: { top: 30, right: 40, bottom: 50, left: 60 }\n  }}\n/>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure your data is sorted by the x-axis values before passing it to the component"}),"\n",(0,s.jsx)(n.li,{children:"For time-series data, use proper date formatting"}),"\n",(0,s.jsx)(n.li,{children:"Consider responsive sizing by using percentage-based width/height"}),"\n",(0,s.jsx)(n.li,{children:"Use contrasting colors for better visibility"}),"\n",(0,s.jsx)(n.li,{children:"Include axis labels and a legend when showing multiple lines"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);