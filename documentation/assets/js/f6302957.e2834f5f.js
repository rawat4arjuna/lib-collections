"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7513],{371:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rexora-hooks/use-rexora-retry","title":"useRexoraRetry","description":"The useRexoraRetry hook provides a mechanism to automatically retry a failed asynchronous operation (like a fetch request) a specified number of times with optional delays between retries.","source":"@site/docs/rexora-hooks/use-rexora-retry.md","sourceDirName":"rexora-hooks","slug":"/rexora-hooks/use-rexora-retry","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-retry","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"useRexoraRenderCount","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-render-count"},"next":{"title":"useRexoraThrottle","permalink":"/rexora/documentation/docs/rexora-hooks/use-rexora-throttle"}}');var l=n(1085),s=n(1184);const i={},o="useRexoraRetry",d={},c=[{value:"Installation",id:"installation",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Notes",id:"notes",level:2}];function a(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"userexoraretry",children:"useRexoraRetry"})}),"\n",(0,l.jsxs)(t.p,{children:["The ",(0,l.jsx)(t.code,{children:"useRexoraRetry"})," hook provides a mechanism to automatically retry a failed asynchronous operation (like a fetch request) a specified number of times with optional delays between retries."]}),"\n",(0,l.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"bash\nnpm install your-rexora-hooks-package\n# or\nyarn add your-rexora-hooks-package\n"})}),"\n",(0,l.jsx)(t.h2,{id:"import",children:"Import"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"javascript\nimport { useRexoraRetry } from 'your-rexora-hooks-package';\n"})}),"\n",(0,l.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"javascript\nimport React from 'react';\nimport { useRexoraRetry } from 'your-rexora-hooks-package';\n\nconst fetchData = async () => {\n  const response = await fetch('https://api.example.com/data');\n  if (!response.ok) {\n    throw new Error('Failed to fetch data');\n  }\n  return response.json();\n};\n\nconst MyComponent = () => {\n  const { data, loading, error, retry } = useRexoraRetry(fetchData, {\n    retries: 3,\n    delay: 1000, // 1 second delay\n  });\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return (\n      <div>\n        <p>Error: {error.message}</p>\n        <button onClick={retry}>Retry Fetch</button>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2>Data:</h2>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"})}),"\n",(0,l.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Parameter"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Default Value"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"asyncFunction"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"() => Promise<any>"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The asynchronous function to execute and retry."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"required"})})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"options"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"{ retries?: number; delay?: number }"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An object containing options for retrying."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"{}"})})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"options.retries"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The maximum number of times to retry the operation."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"0"})})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"options.delay"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"number"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The delay in milliseconds between retry attempts."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"0"})})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"dependencies"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"any[]"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"An optional array of dependencies. The async function will re-run if these change."}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"[]"})})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"return-value",children:"Return Value"}),"\n",(0,l.jsx)(t.p,{children:"The hook returns an object with the following properties:"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Property"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"data"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"any"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"The result of the asynchronous operation."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"loading"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"boolean"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Indicates if the operation is currently in progress."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"error"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"Error | null"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"Any error that occurred during the operation."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"retry"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.code,{children:"() => void"})}),(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"A function to manually trigger a retry."})]})]})]}),"\n",(0,l.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.code,{children:"retry"})," function can be used to manually trigger a new execution of the ",(0,l.jsx)(t.code,{children:"asyncFunction"}),', for example, when a "Retry" button is clicked after an error.']}),"\n",(0,l.jsxs)(t.li,{children:["The ",(0,l.jsx)(t.code,{children:"dependencies"})," array works similarly to the dependency array in ",(0,l.jsx)(t.code,{children:"useEffect"}),". If the dependencies change, the ",(0,l.jsx)(t.code,{children:"asyncFunction"})," will be executed again, including the retry logic if it fails."]}),"\n",(0,l.jsxs)(t.li,{children:["The hook will stop retrying after the specified number of ",(0,l.jsx)(t.code,{children:"retries"})," is reached or if the operation succeeds."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(4041);const l={},s=r.createContext(l);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);